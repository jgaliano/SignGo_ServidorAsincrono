from celery import shared_task
from flujo_firma_async.flujo_firma_models import task_asincronoFlujo, Firmante, detalleFirmaFlujo, firma_asincronaFlujo, UserSigngoFlujoFirma, uploadDocument, VitacoraFirmadoFlujo, Envio, DatosFirmante, log_oneshot, oneshotAPI, credenciales_operador, token_oneshot, firma_lotes
from django.http import JsonResponse
import json
from django.db.models import Q
import requests
import time
from django.core.mail import send_mail
from django.template.loader import render_to_string
import uuid
from servidor_async.signbox_models import webhookIP_Signbox, LicenciasSistema, signboxAPI, PerfilSistema, UsuarioSistema
from servidor_async.signbox_models import Imagen as ImagenSignbox
from servidor_async.signbox_models import credencialesCert as CredencialesCertificadoSignbox
import base64
from django.utils.timezone import now
from django.utils import timezone

@shared_task
def tarea_asincrona_flujo_firma(TokenFirmante):
    get_task = task_asincronoFlujo.objects.using('signgo').get(transaccion_tarea=TokenFirmante)
    get_credenciales = firma_asincronaFlujo.objects.using('signgo').get(token_firmante=TokenFirmante)
    if get_task.transaccion_tipo == "individual":
        dataDocuments = detalleFirmaFlujo.objects.filter(id__in=json.loads(get_credenciales.archivos)).order_by('id')
        # LA INFORMACIÓN DE ESTE FIRMANTE UNICAMENTE SE UTILIZA PARA OBTENER INFORMACIÓN RELACIONADA A SU CUENTA, COMO LA
        # PERSONALIZACIÓN DE LA ESTAMPA GRAFICA DE ESTE FIRMANTE
        find_firmante = Firmante.objects.get(TokenAuth=get_credenciales.usuario)
        
        find_firma_lotes = firma_lotes.objects.get(TokenAuth=TokenFirmante)
        flujos_lista = json.loads(find_firma_lotes.flujos)
    else:
        find_firmante = Firmante.objects.get(TokenAuth=TokenFirmante)
        dataDocuments = detalleFirmaFlujo.objects.filter(firmante=find_firmante).order_by('id')
        flujos_lista = []
        flujos_lista.append(find_firmante.envio.pk)
        
    
    # for documento in dataDocuments:
    #     documento.status = "Firmado"
    #     documento.save()
    #     time.sleep(2)
    
    # get_user_firmante = UserSigngoFlujoFirma.objects.using('signgo').get(id)
    
    
    idsAPI = []
    idError = []
    idOK = []
    
    # BUSCAR IMAGEN DE FIRMANTE
    if UserSigngoFlujoFirma.objects.filter(email=find_firmante.correo).exists():
        buscar_usuario_firmante = UserSigngoFlujoFirma.objects.get(email=find_firmante.correo)
        usuario_firmante = buscar_usuario_firmante.pk
    else:
        usuario_firmante = None
    
    for document in dataDocuments:
        tokenArchivo = document.identificador_documento
        coordenadas = f'{document.p_x1},{document.p_y1},{document.p_x2},{document.p_y2}'
        idFirma = signDocument("nada", get_credenciales.c1, get_credenciales.c2, get_credenciales.c3, document.documento.nombre_documento, coordenadas, document.pagina, tokenArchivo, "carpeta me parece", document.documento.url_documento, document.firmante.TokenAuth, usuario_firmante)
        parse_idFirma = json.loads(idFirma)
                    
        if parse_idFirma["success"] == True:
            idFirma = parse_idFirma["data"]
        else:
            idFirma = parse_idFirma["error"]
                        
        saveIDFile(document.documento.nombre_documento, tokenArchivo, document.envio.pk, "Pendiente", document.firmante.TokenAuth, idFirma, document.documento.pk) # cambié el user id del firmante por el token del firmante
        idsAPI.append(idFirma)
        time.sleep(0.5)
        
        if document.firma_multiple:
            while True:
                # VERIFICAR STATUS DEL DOCUMENTO
                find_proceso = detalleFirmaFlujo.objects.get(identificador_documento=tokenArchivo)
                if find_proceso.status == "Firmado":
                    break
        else:
            None
        
    # Validación de proceso de firmado
    while True:
        registros_pendientes = VitacoraFirmadoFlujo.objects.filter(IDArchivoAPI__in=idsAPI, EstadoFirma='Pendiente')
                     
        if not registros_pendientes.exists():
            print("Todos los estados han cambiado.")
            break
                
        time.sleep(1)
    
    # Validación de logs de firmado
    for id in idsAPI:
        validateID = VitacoraFirmadoFlujo.objects.filter(IDArchivoAPI=id).last()
        if validateID.EstadoFirma == "Firmado":
            idOK.append(id)
        else:
            idError.append(id)
    
    
                  
    if idOK:
        for envio in flujos_lista:
            find_envío = Envio.objects.get(id=envio)      
            if find_firmante.envio.flujo_por_orden == True:
                result = envio_ordenado(find_envío.TokenAuth)
            else:
                result = envio_masivo(find_envío.TokenAuth)
            
        enviar_correo(
            "Proceso de firma completado", 
            "El proceso de firmado ha concluido con éxito, ya puede revisar sus documentos", 
            "notificaciones@signgo.com.gt", 
            find_firmante.correo, 
            TokenFirmante)    
        
                
        return 'Documentos firmados'
    else:
        return 'Error al Firmar. Por favor intentelo mas tarde.'



def signDocument(id_request, usuarioCliente, contraseña, pin, nombreDocumento, coordenadas, pagina, tokenArchivoID, getDataEstilo, url_archivo, tokenFirmante, usuarioSistema):
    try:
        getDataWebhook = webhookIP_Signbox.objects.get(id=1)
    
        if getDataWebhook.protocol == "1":
            protocolo = "https"
        else:
            protocolo = "http"
        
        dataUrlOut = f'{protocolo}://{getDataWebhook.ip}/flujo_firma/result/{tokenArchivoID}'
        dataUrlBack = f'{protocolo}://{getDataWebhook.ip}/flujo_firma/services/{tokenArchivoID}'
        
        
        # requestStatusBilling = billingSignboxProd.objects.get(id=1)
        # if requestStatusBilling.status == "1":
        #     userBilling = requestStatusBilling.user
        #     passBilling = requestStatusBilling.password
        #     envSignbox = "prod"
        # else:
        #     requestSandboxBilling = billingSignboxSandbox.objects.get(id=1)   
        #     userBilling = requestSandboxBilling.user
        #     passBilling = requestSandboxBilling.password
        #     envSignbox = "sandbox"
            
        
        find_firmante = Firmante.objects.get(TokenAuth=tokenFirmante)    
        
        validate_licencia = validación_licencia(find_firmante.envio.operador.pk)
        validate_licencia_parse = json.loads(validate_licencia)
        
        if validate_licencia_parse['tipo_licencia'] == 'sandbox':
            envSignbox = "sandbox"
        else:
            envSignbox = "prod"
            
        validate_identifier = idetifier_signcloud(usuarioCliente, contraseña, envSignbox)
        validate_identifier_parse = json.loads(validate_identifier)
        identifier = 'DS0'
        
        if validate_identifier_parse['success']:
            identifier = validate_identifier_parse['data']
            
        licencia_usuario = LicenciasSistema.objects.get(id=validate_licencia_parse['id_licencia'])
            
        userBilling = licencia_usuario.usuario_billing
        passBilling = licencia_usuario.contrasena_billing   
    
            
        dataAPI = signboxAPI.objects.get(id=1)
        protocolAPI = "http" if dataAPI.protocol == "0" else "https"
        newURL = protocolAPI + "://" + dataAPI.ip + "/api/sign"
        
        url = newURL
        dataTexto = []
        
        getIdEstilo = '100000000000'
        
        print(f'id o número de usaurio asociado al envío asincrono{usuarioSistema}')
        
        if usuarioSistema != None:
            if ImagenSignbox.objects.filter(UsuarioSistema=usuarioSistema, is_predeterminado=True).exists():
                obtener_estilo = ImagenSignbox.objects.get(UsuarioSistema=usuarioSistema, is_predeterminado=True)
                getIdEstilo = obtener_estilo.id
                
        if usuarioSistema == None:
            if CredencialesCertificadoSignbox.objects.filter(usuario_cert=usuarioCliente).exists():
                get_credenciales_user = CredencialesCertificadoSignbox.objects.filter(usuario_cert=usuarioCliente).last()
                
                if ImagenSignbox.objects.filter(UsuarioSistema=get_credenciales_user.user_system.pk , is_predeterminado=True).exists():
                    obtener_estilo = ImagenSignbox.objects.get(UsuarioSistema=get_credenciales_user.user_system.pk, is_predeterminado=True)
                    getIdEstilo = obtener_estilo.id
                
            
                     
                
        if ImagenSignbox.objects.filter(id=getIdEstilo).exists():
            personalizacion = ImagenSignbox.objects.get(id=getIdEstilo)
            dataTexto.append("Firmado digitalmente por: $(CN)s") if personalizacion.isNombre else None
            dataTexto.append("Fecha: $(date)s") if personalizacion.isFecha else None
            dataTexto.append('"Ciudad de Guatemala, $(C)s"') if personalizacion.isUbicacion else None
            rubricaGeneral = personalizacion.Rubrica
            rubricaTamaño = personalizacion.dimensionesImagen
        else:
            dataTexto.append("Firmado digitalmente por: $(CN)s")
            dataTexto.append("Fecha: $(date)s")
            dataTexto.append('"Ciudad de Guatemala, $(C)s"')
            rubricaGeneral = ''
            rubricaTamaño = '507,368'
        
        paragraph_format = {
            "font": ["Universal", 5],
            "align": "right",
            "data_format": {
                "timezone": "America/Guatemala",
                "strtime": "%d/%m/%Y %H:%M:%S%z"
            },
            "format": dataTexto
        }

        paragraph_format_list = [paragraph_format]
        paragraph_format_json = json.dumps(paragraph_format_list)
        
        payload = {
            'url_out': dataUrlOut,
            'urlback': dataUrlBack,
            'env': envSignbox,
            'format': 'pades',
            'username': usuarioCliente,
            'password': contraseña,
            'pin': pin,
            'level': 'BES',
            'billing_username': userBilling,
            'billing_password': passBilling,
            'identifier': identifier,
            'reason': 'Firma Electrónica',
            'location': 'Guatemala, Guatemala',
            'img': rubricaGeneral,
            'img_name': 'uanataca.argb',
            'img_size': rubricaTamaño,
            'position': coordenadas,
            'npage': pagina,
            'paragraph_format': paragraph_format_json
        }  
        
        url_archivo_prueba = url_archivo
        descarga_archivo = requests.get(url_archivo_prueba)
        file_content = descarga_archivo.content
        
        files = {
            'file_in': ('PruebaFirma.pdf', file_content, 'application/pdf'),
        }
        
        # files = {
        #     'url_in': url_archivo,
        # }
        
        headers = {
            'Content-Type': 'application/x-www-form-urlencoded'
        }

        response = requests.post(url, data=payload, files=files)
        return json.dumps({"success": True, "data": response.text})
    except Exception as e:
        print(f'Error SignDocument: {e}')
        return json.dumps({"success": False, "error": e})
    
    
def validación_licencia(usuarioID):
    try:
        validate_perfil = PerfilSistema.objects.get(usuario=usuarioID)
        if validate_perfil.empresa == None:
            validate_user = UsuarioSistema.objects.get(UsuarioGeneral=usuarioID)
            validate_licencia = LicenciasSistema.objects.filter(
                Q(tipo='FF_Oneshot') | Q(tipo='CorporativoAuth') | Q(tipo='CorporativoOneshotAuth') | Q(tipo='CorporativoOneshotVideoAuth'),
                usuario=validate_user.id
            ).order_by('-id').last()
            
        else:
            validate_licencia = LicenciasSistema.objects.filter(
                Q(tipo='FF_Oneshot') | Q(tipo='CorporativoAuth') | Q(tipo='CorporativoOneshotAuth') | Q(tipo='CorporativoOneshotVideoAuth'),
                empresa=validate_perfil.empresa.id
            ).order_by('-id').last()
            
        if validate_licencia.licencia_vencida():
            return json.dumps({"success": False, "error": "Licencia Expirada"})
            
        if int(validate_licencia.porcentaje) >= 100:
            return json.dumps({"success": False, "error": "Creditos Agotados"})
        else: 
            return json.dumps({"success": True, "data": "OK", "tipo_licencia": validate_licencia.env, "id_licencia": validate_licencia.id, 'tipo_modulo': validate_licencia.tipo})
            
    except Exception as e:
        return json.dumps({"success": False, "error": f"No se ha podido encontrar su licencia"})
    
    
def idetifier_signcloud(usuario, contraseña, env):
    try:
        if env == 'sandbox':
            url = "https://cryptoapi.sandbox.uanataca.com/api/get_objects"
        else:
            url = "https://cryptoapi.uanataca.com/api/get_objects"

        payload = json.dumps({
            "username": usuario,
            "password": contraseña,
            "type": None,
            "identifier": None
        })
        
        headers = {
            'Content-Type': 'application/json'
        }

        response = requests.request("POST", url, headers=headers, data=payload)

        response_parse = json.loads(response.text)
        
        ckaid = response_parse['result'][-1]['ckaid']
        
        return json.dumps({'success': True, 'data': ckaid})
    except Exception as e:
        print(f'Error al obtener identificador: {e}')
        return json.dumps({'success': False, 'error': e})
    
def saveIDFile(nombreArchivo, tokenArchivo, tokenEnvio, estutusArchivo, usuarioEnvio, IDAPI, idDocumento):
    try:
        InstanceDocumento = uploadDocument.objects.get(id=idDocumento)
        InstanceUser = Firmante.objects.get(TokenAuth=usuarioEnvio)
        InserVitacora = VitacoraFirmadoFlujo(
            TokenEnvio = tokenEnvio,
            NombreArchivo = nombreArchivo,
            TokenArchivo = tokenArchivo,
            UsuarioFirmante = InstanceUser,
            EstadoFirma = estutusArchivo,
            IDArchivoAPI = IDAPI,
            documento_id = InstanceDocumento
        )
        InserVitacora.save()
        return 'OK 200'
    except Exception as e:
        print(f'Error: {e}')
        return e
    
def envio_ordenado(tokenEnvio):
    try:
        find_envio = Envio.objects.get(TokenAuth=tokenEnvio)
        firmante = Firmante.objects.filter(envio=find_envio,is_enviado=False).first()
        
        try:
            # SI YA SE COMPLETARON TODOS LOS PROCESOS DE FIRMA
            todos_firmantes_completados = not Firmante.objects.filter(
                envio=find_envio
            ).filter(
                Q(is_enviado=False) | Q(is_enviado=True, is_firmado=False)
            ).exists()
            
            print(f"envios: {todos_firmantes_completados}")
            
            if todos_firmantes_completados:
                url = f'https://signgo.com.gt/flujo_firma/progreso_flujo/{find_envio.TokenAuth}'
                result = enviar_correo("Flujo de firma completado", "Todos los firmantes han completado el proceso de firma de los documentos enviados", "notificaciones@signgo.com.gt", find_envio.operador.email, find_envio.TokenAuth)
        except Exception as e:
            print("no se envió el correo de confirmación al operador")
            error_msg = json.dumps({"success": False, "error": str(e)})
            raise Exception(error_msg)
        
        find_enviado = Firmante.objects.filter(envio=find_envio, is_enviado=True, is_firmado=False).exists()
        
        parse_result_correo = None
        
        if find_enviado == False:        
            if firmante.tipo_firma == "oneshot" and firmante.is_enviado == False:
                result = validate_one_shot(firmante.pk)
                parse_result = json.loads(result)
                if parse_result["success"]:
                    data_result = json.loads(parse_result["data"])
                    if data_result["status"] == "201 Created" or "200 OK":
                        if parse_result["Correo"]:
                            result_correo = enviar_correo("Solicitud de firma One-Shot", "En este correo se adjunta el archivo en el que es requerida su firma", "notificaciones@signgo.com.gt", firmante.correo, firmante.TokenAuth)
                            parse_result_correo = json.loads(result_correo)
                                
                        if (parse_result_correo and parse_result_correo.get("success")) or parse_result["Correo"] == False:
                            # success.append({'firmante': firmante.pk, 'details': str(data_result["details"]["request_pk"])})
                            firmante.is_enviado = True
                            firmante.fecha_enviado = timezone.now()
                        else:
                            # errors.append({'firmante': firmante, 'details': str(data_result["details"])})
                            None
                    else: 
                        # errors.append({'firmante': firmante, 'details': str(data_result["details"])})
                        None
                else:
                    return json.dumps({"success": False, "error": str(parse_result["error"])})
            elif firmante.tipo_firma == "larga" and firmante.is_enviado == False:
                result = generate_signbox(firmante.pk)
                parse_result = json.loads(result)
                    
                if parse_result["success"]:
                    firmante.is_enviado = True
                    firmante.fecha_enviado = timezone.now()
                else:
                    None
                    
            firmante.save()
        else: 
            None
        
        return json.dumps({"success": True, "data": True})
    except Exception as e:
        print(e)
        return json.dumps({"success": False, "error": str(e)})
    
    
def validate_one_shot(idFirmante):
    try:
        find_oneshot = Firmante.objects.get(pk=idFirmante)
        find_datos_firmante = DatosFirmante.objects.get(Firmante=find_oneshot)
        if find_datos_firmante.with_video:
            result = generate_video_id_oneshot(idFirmante)
            parse_result = json.loads(result)
            try:
                if parse_result["success"]:
                    return json.dumps({"success": True, "data": parse_result["data"], "Correo": False})
                else:
                    return json.dumps({"success": False, "error": str(parse_result["error"]), "Correo": False})
            except Exception as e:
                print(f"error: data_validate_oneshot: {e}")
                return json.dumps({"success": False, "error": f'validate_oneshot: {str(e)}'})
        else:
            result = generate_simple_oneshot(idFirmante)
            parse_result = json.loads(result)
            try:
                if parse_result["success"]:
                    return json.dumps({"success": True, "data": parse_result["data"], "Correo": True})
                else:
                    return json.dumps({"success": False, "error": str(parse_result["error"])})
            except Exception as e:
                print(f"error: data_validate_oneshot: {e}")
                return json.dumps({"success": False, "error": f'validate_oneshot: {str(e)}'})
    except Exception as e:
        print(f'validate oneshot: {e}')
        return json.dumps({"success": False, "error": f'validate_oneshot: {str(e)}'})
    
def generate_video_id_oneshot(idFirmante):
    try:
        # VALIDACIÓN DEL USUARIO FIRMANTE
        firmante_oneshot = Firmante.objects.get(pk=idFirmante)
        datos_firmante = DatosFirmante.objects.get(Firmante=firmante_oneshot)
        
        # SABER QUIEN FUE EL OPERADOR
        # SABER SI EL OPERADOR ES PARTE DE UNA EMPRESA O ES INDIVIDUAL
        # OBTENER LA LICENCIA Y LAS CREDENCAILES DE BILLING ASOCIADAS
        id_operador_asociado = firmante_oneshot.envio.operador.pk
        validar_operador = validacion_operador(id_operador_asociado)
        validar_operador_parse = json.loads(validar_operador)
        
        find_credenciales = credenciales_operador.objects.filter().first()
        
        find_token = token_oneshot.objects.filter().first()
        
        if validar_operador_parse['tipo_licencia'] == 'sandbox':
            env = "sandbox"
            id_RA = "98"
            # CREDENCIALES DE CERTIFICADO EN SANDBOX ONESHOT
            username_operador = find_credenciales.usuario_sandbox
            password_operador = find_credenciales.contraseña_sandbox
            pin_operador = find_credenciales.pin_sandbox
            token = find_token.token_sandbox
        else:
            env = "prod"
            id_RA = "1471"
            # CREDENCIALES DE CERTIFICADO EN PRODUCCIÓN ONESHOT
            username_operador = find_credenciales.usuario_prod
            password_operador = find_credenciales.contraseña_prod
            pin_operador = find_credenciales.pin_prod
            token = find_token.token
        
        licencia_usuario = LicenciasSistema.objects.get(id=validar_operador_parse['id_licencia'])

        
        # PARAMETROS DE REQUEST DE LICENCIA Y AMBIENTE DE TRABAJO
        billing_username = licencia_usuario.usuario_billing        
        billing_password_parse = licencia_usuario.contrasena_billing
        texto_bytes = billing_password_parse.encode("utf-8")
        texto_base64 = base64.b64encode(texto_bytes)
        billing_password = texto_base64.decode("utf-8")
        
        # ENDPOINT Y PROTOCOLOS DE API ONESHOT
        protocolo, ip = validar_API_oneshot()
        url_API = f'{protocolo}://{ip}/api/v1/videoid'
        

        payload = json.dumps({
            "username": username_operador,
            "password": password_operador,
            "pin": pin_operador,
            "mobile_phone_number": f"+502{datos_firmante.celular}",
            "email": firmante_oneshot.correo,
            "registration_authority": id_RA,
            "profile": "CCPNIndividual",
            "residence_city": "Guatemala",
            "residence_address": datos_firmante.direccion,
            "videoid_mode": 1,
            "billing_username": billing_username,
            "billing_password": billing_password,
            "env": env,
            "token": "118336d4c91b4aca8a53bee8f18fd044",
            "given_name": firmante_oneshot.nombres,
            "surname_1": firmante_oneshot.apellidos,
            "surname_2": ""
        })
        headers = {
            'Content-Type': 'application/json'
        }
        
        response = requests.post(url_API, data=payload)
        result = json.loads(response.text)
        
        insert_log = log_oneshot(
            log=response.text,
            Firmante=firmante_oneshot,
            status = str(result["status"]),
            detail = str(result["details"]["request_pk"]) 
        )
        insert_log.save()
        
        return json.dumps({"success": True, "data": response.text})
    except Exception as e:
        return json.dumps({"success": False, "error": e})
    
    
def validacion_operador(id_operador):
    try:
        validate_perfil = PerfilSistema.objects.get(usuario=id_operador)
        if validate_perfil.empresa == None:
            validate_user = UsuarioSistema.objects.get(UsuarioGeneral=id_operador)
            validate_licencia = LicenciasSistema.objects.filter(
                Q(tipo='FF_Oneshot') | Q(tipo='CorporativoOneshotAuth') | Q(tipo='CorporativoOneshotVideoAuth'),
                usuario=validate_user.id
            ).order_by('-id').last()
        else:            
            validate_licencia = LicenciasSistema.objects.filter(
                Q(tipo='FF_Oneshot') | Q(tipo='CorporativoOneshotAuth') | Q(tipo='CorporativoOneshotVideoAuth'),
                empresa=validate_perfil.empresa.id
            ).order_by('-id').last()
            
        if validate_licencia.licencia_vencida():
            return json.dumps({"success": False, "error": "Licencia Expirada"})
        
        return json.dumps({"success": True, "data": "OK", "tipo_licencia": validate_licencia.env, "id_licencia": validate_licencia.id})   
                
    except Exception as e:
        print(e)
        return json.dumps({"success": False, "error": "No se ha podido encontrar su licencia"})
    
def validar_API_oneshot():
    
    dataOneshot = oneshotAPI.objects.get(id=1)
    protocol = "http" if dataOneshot.protocol == "0" else "https"
    ip = dataOneshot.ip    
    
    return protocol, ip


def generate_simple_oneshot(idFirmante):
    try:

        protocolo, ip = validar_API_oneshot()
        
        firmante_oneshot = Firmante.objects.get(pk=idFirmante)
        datos_firmante = DatosFirmante.objects.get(Firmante=firmante_oneshot)
        
        id_operador_asociado = firmante_oneshot.envio.operador.pk
        validar_operador = validacion_operador(id_operador_asociado)
        validar_operador_parse = json.loads(validar_operador)
        
        find_credenciales = credenciales_operador.objects.filter().first()
        
        if validar_operador_parse['tipo_licencia'] == 'sandbox':
            env = "sandbox"
            id_RA = "98"
            # CREDENCIALES DE CERTIFICADO EN SANDBOX ONESHOT
            username_operador = find_credenciales.usuario_sandbox
            password_operador = find_credenciales.contraseña_sandbox
            pin_operador = find_credenciales.pin_sandbox
        else:
            env = "prod"
            id_RA = "1471"
            # CREDENCIALES DE CERTIFICADO EN PRODUCCIÓN ONESHOT
            username_operador = find_credenciales.usuario_prod
            password_operador = find_credenciales.contraseña_prod
            pin_operador = find_credenciales.pin_prod
        
        
        
        licencia_usuario = LicenciasSistema.objects.get(id=validar_operador_parse['id_licencia'])       
        
        # PARAMETROS DE REQUEST DE LICENCIA Y AMBIENTE DE TRABAJO
        billing_username = licencia_usuario.usuario_billing        
        billing_password_parse = licencia_usuario.contrasena_billing
        texto_bytes = billing_password_parse.encode("utf-8")
        texto_base64 = base64.b64encode(texto_bytes)
        billing_password = texto_base64.decode("utf-8")
        
        url_API = f'{protocolo}://{ip}/api/v1/request'
        
        payload={
            'given_name': firmante_oneshot.nombres,
            'surname_1': firmante_oneshot.apellidos,
            'surname_2': "",
            'id_document_type': 'IDC',
            'id_document_country': 'GT',
            'serial_number': datos_firmante.dpi,
            'email': firmante_oneshot.correo,
            'mobile_phone_number': f'+502{datos_firmante.celular}',
            'registration_authority': id_RA,
            'profile': 'CCPNIndividual',
            'username': username_operador,
            'password': password_operador,
            'pin': pin_operador,
            'env': env,
            'billing_username': billing_username,
            'billing_password': billing_password,
            'residence_city': 'Guatemala',
            'residence_address': datos_firmante.direccion
            }
        
        payload_json = json.dumps(payload)

        files = {
            'document_front': ('img_front.jpg', datos_firmante.imagen_dpi_frontal.imagen, 'image/jpg'),
            'document_rear': ('img_rear.jpg', datos_firmante.imagen_dpi_posterior.imagen, 'image/jpg'),
            'document_owner': ('img_owner.jpg', datos_firmante.imagen_persona.imagen, 'image/jpg')
        }

        response = requests.post(url_API, data=payload, files=files)
        result = json.loads(response.text)
        
        insert_log = log_oneshot(
            log=response.text,
            Firmante=firmante_oneshot,
            status = str(result["status"]),
            detail = str(result["details"]) 
        )
        insert_log.save()
        
        return json.dumps({"success": True, "data": response.text})
    except Exception as e:
        print(f"error generate_simple_oneshot: {e}")
        return json.dumps({"success": False, "error": f'generate_simple_oneshot: {str(e)}'})

def generate_signbox(idFirmante):
    firmante_signbox = Firmante.objects.get(pk=idFirmante)
    result = enviar_correo("Solicitud de Firma Electrónica", "Firme el siguiente documento con su certificado de larga duración", "notificaciones@signgo.com.gt", firmante_signbox.correo, firmante_signbox.TokenAuth)
    parse_result = json.loads(result)
    
    if parse_result["success"]:
        return json.dumps({"success": True, "data": "ok"})
    else: 
        return json.dumps({"success": False, "error": str(parse_result["error"])})
    

def enviar_correo(asunto_mail, mensaje_mail, remitente_mail, destinatario_mail, ad1):
    try:
        
        nombre_empresa = 'SignGo'
        nombre_remitente = 'El equipo'        
        
        try:
            find_firmante = Firmante.objects.get(TokenAuth=ad1)
            getIpDominio = webhookIP_Signbox.objects.get(id=1)
            
            # VALIDACIÓN DE EMPRESA QUE ENVÍA EL CORREO
            find_firmante = Firmante.objects.get(TokenAuth=ad1)
            url_firmante = find_firmante.TokenAuth
            nombres_firmnte = find_firmante.nombres
            apellidos_firmante = find_firmante.apellidos
            validate_perfil = PerfilSistema.objects.get(usuario=find_firmante.envio.operador.pk)
            if validate_perfil.empresa != None:
                if validate_perfil.empresa.Token == 'fK7iwVEi966fJItP4K6BFbmewlqvnbynEXmpgYcT':
                    nombre_empresa = 'Meso American Reef Fund Inc.'
                    # nombre_remitente = f'{find_firmante.envio.operador.first_name} {find_firmante.envio.operador.last_name}'
                    nombre_remitente = 'Patricia Cabrera'
            url = f'https://signgo.com.gt/flujo_firma/validar_documento/{url_firmante}'        
        except Firmante.DoesNotExist:
            url = f'https://signgo.com.gt/flujo_firma/progreso_flujo/{ad1}'
            nombres_firmnte = ""
            apellidos_firmante = ""
        
        
        context = {
            'data': url,
            'nombre': f'{nombres_firmnte} {apellidos_firmante}',
            'asunto': asunto_mail,
            'nombre_remitente': nombre_remitente,
            'nombre_empresa': nombre_empresa,
            'mensaje': mensaje_mail
        }
        
        template_html = render_to_string('plantilla_correo.html', context)
        
        
        destinatarios = [destinatario_mail]
        send_mail(asunto_mail, '', remitente_mail, destinatarios, fail_silently=False, html_message=template_html)
        return json.dumps({"success": True, "data": "Enviado"})
    except Exception as e:
        print(f'send_mail: {e}')
        return json.dumps({"success": False, "error": f'send_mail: {str(e)}'})
    
def envio_masivo(tokenEnvio):
    try:
        find_envio = Envio.objects.get(TokenAuth=tokenEnvio)
        find_firmantes = Firmante.objects.filter(envio=find_envio)
        
        try:
            # SI YA SE COMPLETARON TODOS LOS PROCESOS DE FIRMA
            todos_firmantes_completados = not Firmante.objects.filter(
                envio=find_envio
            ).filter(
                Q(is_enviado=False) | Q(is_enviado=True, is_firmado=False)
            ).exists()
            
            print(f"envios: {todos_firmantes_completados}")
            
            if todos_firmantes_completados:
                url = f'https://signgo.com.gt/flujo_firma/progreso_flujo/{find_envio.TokenAuth}'
                result = enviar_correo("Flujo de firma completado", "Todos los firmantes han completado el proceso de firma de los documentos enviados", "notificaciones@signgo.com.gt", find_envio.operador.email, find_envio.TokenAuth)
        except Exception as e:
            print("no se envío el correo de confirmación al operador")
            raise json.dumps({"success": False, "error": str(e)})  
        
        errors = []
        success = []
        parse_result_correo = None
        
        for firmante in find_firmantes:
            if firmante.tipo_firma == "oneshot" and firmante.is_enviado == False:
                result = validate_one_shot(firmante.pk)
                parse_result = json.loads(result)
                if parse_result["success"]:
                    data_result = json.loads(parse_result["data"])
                    if data_result["status"] == "201 Created" or "200 OK":
                        if parse_result["Correo"]:
                            result_correo = enviar_correo("Solicitud de firma One-Shot", "En este correo se adjunta el archivo en el que es requerida su firma", "notificaciones@signgo.com.gt", firmante.correo, firmante.TokenAuth)
                            parse_result_correo = json.loads(result_correo)
                            
                        if (parse_result_correo and parse_result_correo.get("success")) or parse_result["Correo"] == False:
                            # success.append({'firmante': firmante.pk, 'details': str(data_result["details"]["request_pk"])})
                            firmante.is_enviado = True
                            firmante.fecha_enviado = timezone.now()
                        else:
                            # errors.append({'firmante': firmante, 'details': str(data_result["details"])})
                            None
                    else: 
                        # errors.append({'firmante': firmante, 'details': str(data_result["details"])})
                        None
                else:
                    return json.dumps({"success": False, "error": str(parse_result["error"])})
            elif firmante.tipo_firma == "larga" and firmante.is_enviado == False:
                result = generate_signbox(firmante.pk)
                parse_result = json.loads(result)
                
                if parse_result["success"]:
                    firmante.is_enviado = True
                    firmante.fecha_enviado = timezone.now()
                else:
                    None
                
            firmante.save()
        
        return json.dumps({"success": True, "data": "True"})
    except Exception as e:
        print(f'envio masivo: {e}')
        return json.dumps({"success": False, "error": f'envio_masivo: {str(e)}'})
    
